{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar capitalize = require( '@stdlib/string-base-capitalize' );\nvar lowercase = require( '@stdlib/string-base-lowercase' );\nvar replace = require( '@stdlib/string-base-replace' );\nvar trim = require( '@stdlib/string-base-trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[-!\"'(),\u2013.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_TO_CAMEL = /(?:\\s|^)([^\\s]+)(?=\\s|$)/g;\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Converts first capture group to uppercase.\n*\n* @private\n* @param {string} match - entire match\n* @param {string} p1 - first capture group\n* @param {number} offset - offset of the matched substring in entire string\n* @returns {string} uppercased capture group\n*/\nfunction replacer( match, p1, offset ) {\n\tp1 = lowercase( p1 );\n\treturn ( offset === 0 ) ? p1 : capitalize( p1 );\n}\n\n\n// MAIN //\n\n/**\n* Converts a string to camel case.\n*\n* @param {string} str - string to convert\n* @returns {string} camel-cased string\n*\n* @example\n* var out = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* @example\n* var out = camelcase( 'IS_MOBILE' );\n* // returns 'isMobile'\n*\n* @example\n* var out = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*\n* @example\n* var out = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*/\nfunction camelcase( str ) {\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_WHITESPACE, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\treturn replace( str, RE_TO_CAMEL, replacer );\n}\n\n\n// EXPORTS //\n\nmodule.exports = camelcase;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to camel case.\n*\n* @module @stdlib/string-base-camelcase\n*\n* @example\n* var camelcase = require( '@stdlib/string-base-camelcase' );\n*\n* var str = camelcase( 'foo bar' );\n* // returns 'fooBar'\n*\n* str = camelcase( '--foo-bar--' );\n* // returns 'fooBar'\n*\n* str = camelcase( 'Hello World!' );\n* // returns 'helloWorld'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,gCAAiC,EACvDC,EAAY,QAAS,+BAAgC,EACrDC,EAAU,QAAS,6BAA8B,EACjDC,EAAO,QAAS,0BAA2B,EAK3CC,EAAgB,OAChBC,EAAa,0CACbC,EAAc,4BACdC,EAAW,qBAcf,SAASC,EAAUC,EAAOC,EAAIC,EAAS,CACtC,OAAAD,EAAKT,EAAWS,CAAG,EACVC,IAAW,EAAMD,EAAKV,EAAYU,CAAG,CAC/C,CA2BA,SAASE,EAAWC,EAAM,CACzB,OAAAA,EAAMX,EAASW,EAAKR,EAAY,GAAI,EACpCQ,EAAMX,EAASW,EAAKT,EAAe,GAAI,EACvCS,EAAMX,EAASW,EAAKN,EAAU,OAAQ,EACtCM,EAAMV,EAAMU,CAAI,EACTX,EAASW,EAAKP,EAAaE,CAAS,CAC5C,CAKAT,EAAO,QAAUa,IChDjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "capitalize", "lowercase", "replace", "trim", "RE_WHITESPACE", "RE_SPECIAL", "RE_TO_CAMEL", "RE_CAMEL", "replacer", "match", "p1", "offset", "camelcase", "str", "main"]
}
